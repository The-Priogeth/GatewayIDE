<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Class="GatewayIDE.App.MainWindow"
        mc:Ignorable="d"
        Width="1280" Height="800"
        Title="Gateway IDE">



  <!-- Root Grid: Topbar + Content -->
  <Grid RowDefinitions="Auto,*">

    <!-- Top bar with tabs -->
    <Border Grid.Row="0" Background="#2b2f36" Height="44">
      <Grid ColumnDefinitions="44,*,Auto,Auto,Auto,Auto,Auto" VerticalAlignment="Center">
        <!-- Toggle chat -->
        <Border Grid.Column="0" Background="Transparent" Margin="6">
          <Button Content="≡"
                  Command="{Binding ToggleChatCommand}"
                  Background="Transparent"
                  Foreground="#ddd"/>
        </Border>

        <TextBlock Grid.Column="1" Text=" " />

        <!-- Tabs -->
        <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="6" Margin="6">
          <Button Content="Dashboard" Command="{Binding SelectTabCommand}" CommandParameter="Dashboard"/>
        </StackPanel>
        <StackPanel Grid.Column="3" Orientation="Horizontal" Spacing="6" Margin="6">
          <Button Content="Docker" Command="{Binding SelectTabCommand}" CommandParameter="Docker"/>
        </StackPanel>
        <StackPanel Grid.Column="4" Orientation="Horizontal" Spacing="6" Margin="6">
          <Button Content="KI System" Command="{Binding SelectTabCommand}" CommandParameter="KI"/>
        </StackPanel>
        <StackPanel Grid.Column="5" Orientation="Horizontal" Spacing="6" Margin="6">
          <Button Content="Project" Command="{Binding SelectTabCommand}" CommandParameter="Project"/>
        </StackPanel>
        <StackPanel Grid.Column="6" Orientation="Horizontal" Spacing="6" Margin="6">
          <Button Content="Blockchain" Command="{Binding SelectTabCommand}" CommandParameter="Blockchain"/>
        </StackPanel>
      </Grid>
    </Border>

    <!-- Content area: Chat-Sidebar + Main -->
    <Grid Grid.Row="1" ColumnDefinitions="Auto,*">

      <!-- Chat Sidebar (nur KI-Dialog) -->
      <Border Background="#3b3f46" Width="{Binding LeftPaneWidth}" MinWidth="0">
        <Grid RowDefinitions="*,Auto" Margin="8">

          <!-- Chat-Output -->
          <TextBox Grid.Row="0"
                  Text="{Binding ChatBuffer}"
                  TextWrapping="Wrap"
                  FontFamily="Consolas, Menlo, monospace"
                  IsReadOnly="True"
                  AcceptsReturn="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"/>

          <!-- Chat-Eingabe -->
          <StackPanel Grid.Row="1" Spacing="6">
            <TextBox Watermark="Chat Nachricht…" Text="{Binding ChatInput, Mode=TwoWay}"/>
            <Button Content="Senden" Command="{Binding SendChatCommand}"/>
          </StackPanel>

        </Grid>
      </Border>

      <!-- Main workspace -->
      <Grid Grid.Column="1">

        <!-- DASHBOARD: oben (Buttons + Status ⇢ 75%/25%), unten Terminal -->
        <Grid RowDefinitions="2*,*"
              IsVisible="{Binding IsDashboard}">

          <!-- OBERER TEIL: Buttons (links, 75%) + Status (rechts, 25%) -->
          <Grid Grid.Row="0" ColumnDefinitions="3*,1*">
            <!-- Buttons links -->
            <ScrollViewer Grid.Column="0">
              <WrapPanel Margin="12" ItemHeight="40" ItemWidth="180">
                <Button Content="Start Mega-Node" Command="{Binding StartMeganodeCommand}" />
              </WrapPanel>
            </ScrollViewer>

            <!-- System Status rechts (nimmt 25%) -->
            <Border Grid.Column="1"
                    Margin="12,0,12,8"
                    Padding="12"
                    Background="#222"
                    HorizontalAlignment="Right"
                    CornerRadius="8">
              <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto,Auto,Auto">
                <TextBlock Grid.ColumnSpan="2"
                          Text="System Status"
                          FontWeight="Bold"
                          Margin="0,0,0,8"/>

                <!-- NEU: Docker Desktop -->
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Docker Desktop:" Margin="0,0,8,4"/>
                <TextBlock Grid.Row="1" Grid.Column="1"
                          Text="{Binding DockerDesktopStatus}"
                          Foreground="{Binding DockerDesktopStatusBrush}"/>

                <!-- Image -->
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Docker Image Status:" Margin="0,0,8,4"/>
                <TextBlock Grid.Row="2" Grid.Column="1"
                          Text="{Binding DockerImageStatus}"
                          Foreground="{Binding DockerImageStatusBrush}"/>

                <!-- Container -->
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Docker Container:" Margin="0,0,8,0"/>
                <TextBlock Grid.Row="3" Grid.Column="1"
                          Text="{Binding DockerContainerStatus}"
                          Foreground="{Binding DockerContainerStatusBrush}"/>
              </Grid>

            </Border>
          </Grid>

          <!-- Terminal unten -->
          <Border Grid.Row="1" Margin="8" BorderBrush="#7a29ff" BorderThickness="2">
            <TextBox Text="{Binding TerminalBuffer}"
                    TextWrapping="Wrap"
                    FontFamily="Consolas, Menlo, monospace"
                    IsReadOnly="True"
                    AcceptsReturn="True"
                    Background="#0b0b0b"
                    Foreground="#d8d8d8"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"/>
          </Border>
        </Grid>
        <!-- -->
        <!-- DOCKER: Buttonleiste + 2 Terminals oben + 1 Terminal mitte + 1 unten -->
        <Grid IsVisible="{Binding IsDocker}" RowDefinitions="Auto,4*,4*,2*" Margin="8">

          <!-- Buttonleiste -->
          <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="8" Margin="0,0,0,8">
            <Button Content="Rebuild (wipe + build)" Command="{Binding RebuildGatewayCommand}" />
            <Button Content="Start (up)"             Command="{Binding StartGatewayCommand}" />
            <Button Content="Stop (down)"            Command="{Binding StopGatewayCommand}" />
            <Button Content="Remove container"       Command="{Binding RemoveGatewayContainerCommand}" />
            <Button Content="Clear Logs"             Command="{Binding ClearAllLogsCommand}" />
          </StackPanel>

          <!-- OBERER BLOCK (Row 1): 2 Terminals nebeneinander (Out | Err) -->
          <Grid Grid.Row="1" ColumnDefinitions="*,8,*">
            <Border Grid.Column="0" BorderBrush="#444" BorderThickness="1">
              <TextBox x:Name="DockerOutBox"
                      Text="{Binding DockerOutBuffer}"
                      CaretIndex="{Binding DockerOutCaret}"
                      TextWrapping="Wrap"
                      FontFamily="Consolas, Menlo, monospace"
                      IsReadOnly="True"
                      AcceptsReturn="True"
                      Background="#0b0b0b"
                      Foreground="#d8d8d8"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            </Border>

            <Border Grid.Column="2" BorderBrush="#444" BorderThickness="1">
              <TextBox x:Name="DockerErrBox"
                      Text="{Binding DockerErrBuffer}"
                      CaretIndex="{Binding DockerErrCaret}"
                      TextWrapping="Wrap"
                      FontFamily="Consolas, Menlo, monospace"
                      IsReadOnly="True"
                      AcceptsReturn="True"
                      Background="#0b0b0b"
                      Foreground="#d8d8d8"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            </Border>
          </Grid>

          <!-- MITTLERER BLOCK (Row 2): Gateway-Container Runtime-Logs (100% Breite) -->
          <Border Grid.Row="2" BorderBrush="#444" BorderThickness="1">
            <TextBox x:Name="GatewayLogBox"
                    Text="{Binding GatewayLogBuffer}"
                    CaretIndex="{Binding GatewayLogCaret}"
                    TextWrapping="Wrap"
                    FontFamily="Consolas, Menlo, monospace"
                    IsReadOnly="True"
                    AcceptsReturn="True"
                    Background="#0b0b0b"
                    Foreground="#d8d8d8"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"/>
          </Border>

          <!-- UNTEN (Row 3): Ausgabe oben, Eingabe unten -->
          <Grid Grid.Row="3" RowDefinitions="*,Auto">

            <!-- Output -->
            <Border Grid.Row="0" BorderBrush="#444" BorderThickness="1">
              <TextBox x:Name="ContainerIOBox"
                      Text="{Binding ContainerIOBuffer}"
                      CaretIndex="{Binding ContainerIOCaret}"
                      TextWrapping="Wrap"
                      FontFamily="Consolas, Menlo, monospace"
                      IsReadOnly="True"
                      AcceptsReturn="True"
                      Background="#0b0b0b"
                      Foreground="#d8d8d8"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            </Border>

            <!-- Input: ENTER sendet, ohne Extra-Button -->
            <TextBox x:Name="ContainerCmdBox"
                    Grid.Row="1"
                    Margin="0,8,0,0"
                    Watermark="Befehl im Container ausführen (z. B. pip list)"
                    Text="{Binding ContainerCommand, Mode=TwoWay}">
              <TextBox.KeyBindings>
                <KeyBinding Gesture="Enter"
                            Command="{Binding ExecuteInContainerCommand}"
                            CommandParameter="{Binding Text, ElementName=ContainerCmdBox}" />
              </TextBox.KeyBindings>
            </TextBox>

          </Grid>



        </Grid>


      </Grid>
    </Grid>

  </Grid>
</Window>

    
